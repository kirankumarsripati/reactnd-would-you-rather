{"version":3,"sources":["reducers/users.ts","utils/_DATA.js","actions/questions.ts","reducers/questions.ts","reducers/index.ts","reducers/authedUser.ts","actions/authUser.ts","actions/users.ts","middleware/logger.ts","middleware/index.ts","components/User.tsx","components/Header.tsx","components/Question.tsx","components/Dashboard.tsx","actions/shared.ts","components/QuestionDetails.tsx","utils/helper.ts","components/NewQuestion.tsx","components/LeaderBoard.tsx","components/Login.tsx","components/NotFound.tsx","components/App.tsx","index.tsx"],"names":["initialState","users","sarahedo","id","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","addQuestion","type","combineReducers","state","action","questionId","answer","loadingBar","loadingBarReducer","logger","store","next","console","group","log","returnValue","getState","groupEnd","composeWithDevTools","applyMiddleware","thunk","connector","connect","user","src","className","alt","dispatch","logout","withRouter","history","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","NavLink","exact","to","onClick","event","preventDefault","push","Card","e","showQuestion","Body","Title","answeredQuestions","Object","keys","sort","a","b","unansweredQuestions","filter","includes","useState","key","setKey","Tabs","activeKey","onSelect","k","Tab","eventKey","title","Row","map","Col","sm","md","handleSaveAnswer","showLoading","qid","_saveQuestionAnswer","then","saveAnswer","addUserAnswer","hideLoading","props","match","params","isOption1Answered","isOption2Answered","isAnswered","React","selectedOption","setSelectedOption","onSubmit","onClickRadio","target","value","check","size","color","optionOneVotes","length","optionTwoVotes","percentageOption1","toFixed","percentageOptionTwo","span","offset","Header","d","time","toLocaleTimeString","substr","slice","toLocaleDateString","formatDate","Form","Group","Check","label","onChange","Button","disabled","render","setOptionOne","setOptionTwo","Label","Control","placeholder","list","created","answered","Table","index","setAuthedUser","userId","setUserId","controlId","onUserChange","NotFound","pageX","pageY","xAxis","yAxis","document","documentElement","clientWidth","clientHeight","this","setState","addEventListener","onMouseMove","bind","removeEventListener","mouseY","style","Component","notLoggedIn","loadData","all","getUsers","getQuestions","useEffect","basename","process","Container","path","component","Login","Dashboard","QuestionDetails","NewQuestion","LeaderBoard","createStore","reducer","middleware","ReactDOM","getElementById"],"mappings":"uTAQA,IAAMA,EAAyB,GCR/B,IAAIC,EAAQ,CACVC,SAAU,CACRC,GAAI,WACJC,KAAM,YACNC,UAAW,oEACXC,QAAS,CACP,yBAA0B,YAC1B,uBAAwB,YACxB,uBAA0B,YAC1B,sBAAyB,aAE3BC,UAAW,CAAC,yBAA0B,2BAExCC,cAAe,CACbL,GAAI,gBACJC,KAAM,iBACNC,UAAW,uEACXC,QAAS,CACP,sBAAyB,YACzB,uBAA0B,aAE5BC,UAAW,CAAC,wBAAyB,0BAEvCE,QAAS,CACPN,GAAI,UACJC,KAAM,WACNC,UAAW,iEACXC,QAAS,CACP,uBAA0B,YAC1B,sBAAyB,YACzB,uBAAwB,aAE1BC,UAAW,CAAC,uBAAwB,4BAIpCA,EAAY,CACd,yBAA0B,CACxBJ,GAAI,yBACJO,OAAQ,WACRC,UAAW,cACXC,UAAW,CACTC,MAAO,CAAC,YACRC,KAAM,mCAERC,UAAW,CACTF,MAAO,GACPC,KAAM,mCAGV,uBAAwB,CACtBX,GAAI,uBACJO,OAAQ,UACRC,UAAW,cACXC,UAAW,CACTC,MAAO,GACPC,KAAM,sBAERC,UAAW,CACTF,MAAO,CAAC,UAAW,YACnBC,KAAM,0BAGV,uBAA0B,CACxBX,GAAI,yBACJO,OAAQ,WACRC,UAAW,cACXC,UAAW,CACTC,MAAO,GACPC,KAAM,kBAERC,UAAW,CACTF,MAAO,CAAC,YACRC,KAAM,kBAGV,sBAAyB,CACvBX,GAAI,wBACJO,OAAQ,gBACRC,UAAW,cACXC,UAAW,CACTC,MAAO,GACPC,KAAM,4BAERC,UAAW,CACTF,MAAO,CAAC,YACRC,KAAM,4BAGV,sBAAyB,CACvBX,GAAI,wBACJO,OAAQ,gBACRC,UAAW,cACXC,UAAW,CACTC,MAAO,CAAC,iBACRC,KAAM,qBAERC,UAAW,CACTF,MAAO,CAAC,WACRC,KAAM,oCAGV,uBAA0B,CACxBX,GAAI,yBACJO,OAAQ,UACRC,UAAW,cACXC,UAAW,CACTC,MAAO,CAAC,WACRC,KAAM,oBAERC,UAAW,CACTF,MAAO,CAAC,iBACRC,KAAM,iBAqCL,SAASE,EAAeC,GAC7B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvB,IAAMC,EAAaJ,EAASP,OACtBY,EAnBV,YAAoE,IAAzCC,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,cAAed,EAAU,EAAVA,OACvD,MAAO,CACLP,GAjBKsB,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IAAMH,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IAkB3FjB,UAAWkB,KAAKC,MAChBpB,SACAE,UAAW,CACTC,MAAO,GACPC,KAAMS,GAERR,UAAW,CACTF,MAAO,GACPC,KAAMU,IAQkBO,CAAed,GAEzCe,YAAW,WACTzB,EAAS,eACJA,EADI,eAENe,EAAkBnB,GAAKmB,IAG1BrB,EAAK,eACAA,EADA,eAEFoB,EAFE,eAGEpB,EAAMoB,GAHR,CAIDd,UAAWN,EAAMoB,GAAYd,UAAU0B,OAAO,CAACX,EAAkBnB,SAIrEgB,EAAIG,KACH,QCpIA,SAASY,EAAYjB,GAC1B,MAAO,CACLkB,KAjCwB,eAkCxBlB,YChCJ,IAAMjB,EAA6B,GCQpBoC,gCAAgB,CAC7Bf,WCTa,WAGG,IAFhBgB,EAEe,uDALmB,KAIlCC,EACe,uCACf,OAAQA,EAAOH,MACb,ICb2B,kBDczB,OAAOG,EAAOnC,GAChB,ICd6B,oBDe3B,OAAO,KACT,QACE,OAAOkC,IDAXpC,MJTa,WAGF,IAFXoC,EAEU,uDAFFrC,EACRsC,EACU,uCACV,OAAQA,EAAOH,MACb,IOXqB,YPYnB,OAAO,eACFE,EADL,GAEKC,EAAOrC,OAEd,IOf2B,kBPe3B,IACUoB,EAAmCiB,EAAnCjB,WAAYkB,EAAuBD,EAAvBC,WAAYC,EAAWF,EAAXE,OAChC,OAAO,eACFH,EADL,eAEGhB,EAFH,eAGOgB,EAAMhB,GAHb,CAIIf,QAAQ,eACH+B,EAAMhB,GAAYf,QADhB,eAEJiC,EAAaC,QAItB,IO1B6B,oBP2B3B,OAAO,eACFH,EADL,eAEGC,EAAOjB,WAFV,eAGOgB,EAAMC,EAAOjB,YAHpB,CAIId,UAAW8B,EAAMC,EAAOjB,YAAYd,UAAU0B,OAAO,CAACK,EAAOC,iBAGnE,QACE,OAAOF,IIrBX9B,UDTa,WAGE,IAFf8B,EAEc,uDAFNrC,EACRsC,EACc,uCACd,OAAQA,EAAOH,MACb,IDVyB,gBCWvB,OAAO,eACFE,EADL,GAEKC,EAAO/B,WAEd,IDdwB,eCcJ,IACVU,EAAaqB,EAAbrB,SACR,OAAO,eACFoB,EADL,eAEGpB,EAASd,GAAKc,IAGnB,IDpBuB,cCoBJ,IACTI,EAAmCiB,EAAnCjB,WAAYkB,EAAuBD,EAAvBC,WAAYC,EAAWF,EAAXE,OAChC,OAAO,eACFH,EADL,eAEGE,EAFH,eAGOF,EAAME,GAHb,eAIKC,EAJL,eAKSH,EAAME,GAAYC,GAL3B,CAMM3B,MAAOwB,EAAME,GAAYC,GAAQ3B,MAAMoB,OAAO,CAACZ,UAKvD,QACE,OAAOgB,ICrBXI,WAAYC,sB,gBIHCC,EATY,SAACC,GAAD,OAA0B,SAACC,GAAD,OAA+B,SAACP,GACnFQ,QAAQC,MAAMT,EAAOH,MACnBW,QAAQE,IAAI,eAAgBV,GAC5B,IAAMW,EAAcJ,EAAKP,GAG3B,OAFEQ,QAAQE,IAAI,gBAAiBJ,EAAMM,YACrCJ,QAAQK,WACDF,KCTMG,gCAAoBC,0BACjCC,IACAX,I,qDCuBaY,EAhBGC,mBAND,SAAC,EAAD,GACf,MAAO,CACLC,KAF+D,EAA/CxD,MAA+C,EAAzBE,OAsB3BoD,EAVF,SAAC,GAAqB,IAAnBE,EAAkB,EAAlBA,KACd,OACE,kBAAC,WAAD,KACE,yBAAKC,IAAKD,EAAKpD,UACbsD,UAAU,SAASC,IAAKH,EAAKrD,OAC/B,8BAAOqD,EAAKrD,UC6BHmD,EAlCGC,mBAZD,SAAC,GAChB,MAAO,CAAEnC,WADqC,EAA5BA,eAIA,SAACwC,GACnB,MAAO,CACLC,OAAQ,WACND,ELOG,CACL1B,KAtB6B,0BKqDlBoB,CAAUQ,aA5BV,SAAC,GAA4C,IAA1C1C,EAAyC,EAAzCA,WAAYyC,EAA6B,EAA7BA,OAAQE,EAAqB,EAArBA,QAOpC,OACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACxB,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,KAAnB,oBACEhD,GACF,kBAAC,WAAD,KACE,kBAAC4C,EAAA,EAAOK,OAAR,CAAeC,gBAAc,aAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiBrE,GAAG,YAClB,kBAACsE,EAAA,EAAD,CAAKd,UAAU,WACb,kBAACc,EAAA,EAAIC,KAAL,CAAUC,GAAIC,IAASC,OAAK,EAACC,GAAG,KAAhC,QACA,kBAACL,EAAA,EAAIC,KAAL,CAAUC,GAAIC,IAASE,GAAG,QAA1B,gBACA,kBAACL,EAAA,EAAIC,KAAL,CAAUC,GAAIC,IAASE,GAAG,gBAA1B,gBACA,kBAACL,EAAA,EAAIC,KAAL,KAAU,kBAAC,EAAD,CAAMvE,GAAIkB,KACpB,kBAACoD,EAAA,EAAIC,KAAL,CAAUK,QAlBH,SAACC,GAChBA,EAAMC,iBACNjB,EAAQkB,KAAK,KACbpB,MAeQ,kB,gDCCGP,EA3BGC,mBATD,SAAC,EAAD,GAIf,MAAO,CACLvC,SAFC,EAFDV,UAEC,EADDJ,OAkCWoD,CAAUQ,aArBR,SAAC,GAAkC,IAAhC9C,EAA+B,EAA/BA,SAAU+C,EAAqB,EAArBA,QAM5B,OACE,kBAACmB,EAAA,EAAD,CAAMxB,UAAU,OAAOoB,QAAS,SAACK,GAAD,OANb,SAACA,EAAmBjF,GACvCiF,EAAEH,iBACFjB,EAAQkB,KAAR,qBAA2B/E,IAI4BkF,CAAaD,EAAGnE,EAASd,MAC9E,kBAACgF,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,yBACEtE,GACA,4BACE,4BAAKA,EAASL,UAAUE,MACxB,4BAAKG,EAASF,UAAUD,aCsBrByC,EAvCGC,mBAfD,SAAC,GAAgD,IAA9CjD,EAA6C,EAA7CA,UAAWN,EAAkC,EAAlCA,MAAOoB,EAA2B,EAA3BA,WACpC,GAAKA,EAAL,CACA,IAAMoC,EAAOxD,EAAMoB,GACbmE,EAAoBC,OAAOC,KAAKjC,EAAKnD,SACxCqF,MAAK,SAACC,EAAGC,GAAJ,OAAUtF,EAAUsF,GAAGlF,UAAYJ,EAAUqF,GAAGjF,aAClDmF,EAAsBL,OAAOC,KAAKnF,GACnCwF,QAAO,SAACxD,GAAD,OAAiBiD,EAAkBQ,SAASzD,MACnDoD,MAAK,SAACC,EAAGC,GAAJ,OAAUtF,EAAUsF,GAAGlF,UAAYJ,EAAUqF,GAAGjF,aAE1D,MAAO,CACL6E,oBACAM,0BA2CWvC,EAnC6B,SAAC,GAGtC,IAFLiC,EAEI,EAFJA,kBACAM,EACI,EADJA,oBACI,EACkBG,mBAAS,cAD3B,mBACGC,EADH,KACQC,EADR,KAGJ,OACE,kBAACC,EAAA,EAAD,CACEjG,GAAG,YACHkG,UAAWH,EACXI,SAAU,SAACC,GAAD,OAAeJ,EAAOI,IAChC5C,UAAU,0BAEV,kBAAC6C,EAAA,EAAD,CAAKC,SAAS,aAAaC,MAAM,cAC/B,kBAACC,EAAA,EAAD,KACGb,EAAoBc,KAAK,SAAArE,GAAU,OACpC,kBAACsE,EAAA,EAAD,CAAKX,IAAK3D,EAAYuE,GAAG,IAAIC,GAAG,KAC9B,kBAAC,EAAD,CAAU5G,GAAIoC,UAKpB,kBAACiE,EAAA,EAAD,CAAKC,SAAS,WAAWC,MAAM,YAC7B,kBAACC,EAAA,EAAD,KACGnB,EAAkBoB,KAAK,SAAArE,GAAU,OAClC,kBAACsE,EAAA,EAAD,CAAKX,IAAK3D,EAAYuE,GAAG,IAAIC,GAAG,KAC9B,kBAAC,EAAD,CAAU5G,GAAIoC,c,wBCjCnB,SAASyE,EAAiBzE,EAAoBC,GACnD,OAAO,SAACqB,EAAoBX,GAAwB,IAC1C7B,EAAe6B,IAAf7B,WAGR,OAFAwC,EAASoD,yBbwJN,YAA4D,IAA5B5F,EAA2B,EAA3BA,WAAY6F,EAAe,EAAfA,IAAK1E,EAAU,EAAVA,OACtD,OAAO,IAAItB,SAAQ,SAACC,EAAKC,GACvBY,YAAW,WACT/B,EAAK,eACAA,EADA,eAEFoB,EAFE,eAGEpB,EAAMoB,GAHR,CAIDf,QAAQ,eACHL,EAAMoB,GAAYf,QADhB,eAEJ4G,EAAM1E,QAKbjC,EAAS,eACJA,EADI,eAEN2G,EAFM,eAGF3G,EAAU2G,GAHR,eAIJ1E,EAJI,eAKAjC,EAAU2G,GAAK1E,GALf,CAMH3B,MAAON,EAAU2G,GAAK1E,GAAQ3B,MAAMoB,OAAO,CAACZ,UAKlDF,MACC,QahLIgG,CAAoB,CACzB9F,aACA6F,IAAK3E,EACLC,WAED4E,MAAK,WACJvD,EZeC,SACLxC,EACAkB,EACAC,GAEA,MAAO,CACLL,KA3CuB,cA4CvBd,aACAkB,aACAC,UYxBW6E,CAAWhG,EAAYkB,EAAYC,IAC5CqB,EPMC,SACLxC,EACAkB,EACAC,GAEA,MAAO,CACLL,KAtC2B,kBAuC3Bd,aACAkB,aACAC,UOfW8E,CAAcjG,EAAYkB,EAAYC,OAEhD4E,MAAK,kBAAMvD,EAAS0D,6BCjBzB,IAuHehE,EA3FGC,mBA5BD,SAAC,EAEhBgE,GACI,IAFFjH,EAEC,EAFDA,UAAWN,EAEV,EAFUA,MAAOoB,EAEjB,EAFiBA,WAGpB,GAAKA,EAAL,CADG,IAGGJ,EAAWV,EADFiH,EAAMC,MAAMC,OAAnBvH,IAEFO,EAAST,EAAMgB,EAASP,QACxBiH,EAAoB1G,EAASL,UAAUC,MAAMmF,SAAS3E,GACtDuG,EAAoB3G,EAASF,UAAUF,MAAMmF,SAAS3E,GAE5D,MAAO,CACLJ,WACAP,SACAmH,WAJiBF,GAAqBC,EAKtCD,yBAIgB,SAAC9D,EAAoB2D,GAA6C,IAC5ErH,EAAOqH,EAAMC,MAAMC,OAAnBvH,GACR,MAAO,CACLkH,WAAY,SAAC7E,GACXqB,EAASmD,EAAiB7G,EAAIqC,QAgGrBe,EArFS,SAAC,GAMX,IALZtC,EAKW,EALXA,SACAP,EAIW,EAJXA,OACAmH,EAGW,EAHXA,WACAF,EAEW,EAFXA,kBACAN,EACW,EADXA,WACW,EACiCS,IAAM7B,WADvC,mBACJ8B,EADI,KACYC,EADZ,KAGLC,EAAW,SAAC7C,GAChBtC,QAAQE,IAAI,eAAgBoC,GAC5BA,EAAEH,iBACE8C,GACFV,EAAWU,IAITG,EAAe,SAAC9C,GACpB4C,EAAkB5C,EAAE+C,OAAOC,QAGvBC,EAAQ,kBAAC,IAAD,CAASC,KAAK,KAAKC,MAAM,UA6DvC,OA3De,WACb,IAAKtH,EACH,OAAO,kBAAC,IAAD,CAAU6D,GAAG,SAGtB,IAAM0D,EAAiBvH,EAASL,UAAUC,MAAM4H,OAC1CC,EAAiBzH,EAASF,UAAUF,MAAM4H,OAC1CE,GAAqBH,GAAkBA,EAAiBE,GAAkB,KAAKE,QAAQ,GACvFC,GAAuBH,GAAkBF,EAAiBE,GAAkB,KAAKE,QAAQ,GAE/F,OACE,kBAACjC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAKE,GAAI,CAAC+B,KAAM,EAAGC,OAAQ,IACzB,kBAAC5D,EAAA,EAAD,KACE,kBAACA,EAAA,EAAK6D,OAAN,KACE,kBAAC,EAAD,CAAM7I,GAAIO,EAAOP,KACjB,kBAAC,IAAD,CAAS2E,GAAG,IAAInB,UAAU,iCAA1B,QACA,yBAAKA,UAAU,aCzFtB,SAAqBhD,GAC1B,IAAMsI,EAAI,IAAIpH,KAAKlB,GACbuI,EAAOD,EAAEE,mBAAmB,SAClC,OAAOD,EAAKE,OAAO,EAAG,GAAKF,EAAKG,OAAO,GAAK,MAAQJ,EAAEK,qBDsFdC,CAAWtI,EAASN,aAElD,kBAACwE,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,yBACCsC,EACC,4BACE,4BACG5G,EAASL,UAAUE,KADtB,KAC8B0H,EAD9B,cACyDG,EADzD,KAC8EhB,EAAoBU,EAAQ,MAE1G,4BACGpH,EAASF,UAAUD,KADtB,KAC8B4H,EAD9B,cACyDG,EADzD,KACiFlB,EAA4B,KAARU,IAGvG,kBAACmB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,CACEvH,KAAK,QACLhC,GAAG,UACHC,KAAK,SACLgI,MAAM,YACNuB,MAAO1I,EAASL,UAAUE,KAC1B8I,SAAU1B,IAEZ,kBAACsB,EAAA,EAAKE,MAAN,CACEvH,KAAK,QACLhC,GAAG,UACHC,KAAK,SACLgI,MAAM,YACNuB,MAAO1I,EAASF,UAAUD,KAC1B8I,SAAU1B,KAGd,kBAAC2B,EAAA,EAAD,CAAQC,UAAW/B,EAAgBhD,QAASkD,GAA5C,eAUT8B,MEnEMxG,EAlDGC,kBAAQ,MARN,SAACK,GACnB,MAAO,CACL3B,YAAa,SAACtB,EAAmBG,GH4B9B,IAA2BQ,EAAuBC,EG3BnDqC,GH2B4BtC,EG3BDX,EH2BwBY,EG3BbT,EH4BnC,SAAC8C,EAAoBX,GAAwB,IAC9BxC,EAAWwC,IAAvB7B,WAIR,OAFAwC,EAASoD,yBAEFjG,EAAc,CACnBO,gBACAC,gBACAd,WAED0G,MAAK,SAACnG,GPEJ,IACLI,EACAkB,EOHIsB,EAAS3B,EAAYjB,IACrB4C,GPCJxC,EOD6BX,EPE7B6B,EOFqCtB,EAASd,GPIvC,CACLgC,KAjD6B,oBAkD7Bd,aACAkB,mBOLC6E,MAAK,kBAAMvD,EAAS0D,mCGaVhE,CAAUQ,aA5CL,SAAC,GAAoC,IAAlC7B,EAAiC,EAAjCA,YAAa8B,EAAoB,EAApBA,QAAoB,EACpB8D,IAAM7B,SAAS,IADK,mBAC/CrF,EAD+C,KACpCoJ,EADoC,OAEpBlC,IAAM7B,SAAS,IAFK,mBAE/ClF,EAF+C,KAEpCkJ,EAFoC,KAUtD,OACE,kBAACtD,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAKE,GAAI,CAAE+B,KAAM,EAAGC,OAAQ,IAC1B,kBAAC5D,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,yBACA,kBAACiE,EAAA,EAAD,CAAMvB,SAZK,SAAC7C,GACpBA,EAAEH,iBACF/C,EAAYtB,EAAWG,GACvBiD,EAAQkB,KAAK,OAUH,kBAACsE,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKU,MAAN,mBACA,kBAACV,EAAA,EAAKW,QAAN,CACEhI,KAAK,OACLiG,MAAOxH,EACPgJ,SAAU,SAACxE,GAAD,OAAO4E,EAAa5E,EAAE+C,OAAOC,QACvCgC,YAAY,gBAGhB,kBAACZ,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKU,MAAN,mBACA,kBAACV,EAAA,EAAKW,QAAN,CACEhI,KAAK,OACLiG,MAAOrH,EACP6I,SAAU,SAACxE,GAAD,OAAO6E,EAAa7E,EAAE+C,OAAOC,QACvCgC,YAAY,gBAGhB,kBAACP,EAAA,EAAD,CAAQ1H,KAAK,SAAS2H,UAAWlJ,IAAcG,GAA/C,mB,QCVCwC,EA3BGC,mBAZD,SAAC,GAA0B,IAAxBvD,EAAuB,EAAvBA,MAOlB,MAAO,CACLoK,KAPW5E,OAAOC,KAAKzF,GAAO2G,KAAI,SAAAzG,GAAE,MAAK,CACzCA,KACAmK,QAASrK,EAAME,GAAII,UAAUkI,OAC7B8B,SAAU9E,OAAOC,KAAKzF,EAAME,GAAIG,SAASmI,WAE1C9C,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEyE,QAAUzE,EAAE0E,UAAY3E,EAAE0E,QAAU1E,EAAE2E,gBAiC3ChH,EAvBK,SAAC,GAAD,IAAG8G,EAAH,EAAGA,KAAH,OAClB,kBAACG,EAAA,EAAD,CAAO7G,UAAU,gBACf,+BACE,4BACE,oCACA,oCACA,iDACA,oDAGJ,+BACG0G,EAAKzD,KAAI,SAACnD,EAAMgH,GAAP,OACR,wBAAIvE,IAAKzC,EAAKtD,IACZ,4BAAKsK,EAAQ,GACb,4BAAI,kBAAC,EAAD,CAAMtK,GAAIsD,EAAKtD,MACnB,4BAAKsD,EAAK6G,SACV,4BAAK7G,EAAK8G,mBCkBLhH,EAtCGC,mBAZD,SAAC,GAChB,MAAO,CAAEvD,MADgC,EAAvBA,UAIA,SAAC4D,GACnB,MAAO,CACL6G,cAAe,SAACvK,GACd0D,EbCC,SAAuB1D,GAC5B,MAAO,CACLgC,KAhB2B,kBAiB3BhC,MaJWuK,CAAcvK,QA2CdoD,EAlCD,SAAC,GAA8C,IAA5CtD,EAA2C,EAA3CA,MAAOyK,EAAoC,EAApCA,cAAoC,EAC9B5C,IAAM7B,SAAS,IADe,mBACnD0E,EADmD,KAC3CC,EAD2C,KAW1D,OACE,kBAACjE,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAKE,GAAI,CAAC+B,KAAM,EAAGC,OAAQ,IACzB,kBAACS,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYoB,UAAU,cACpB,kBAACrB,EAAA,EAAKU,MAAN,oBACA,kBAACV,EAAA,EAAKW,QAAN,CAAcxF,GAAG,SAASyD,MAAOuC,EAC/Bf,SAAU,SAAC5E,GAAD,OAfD,SAAC2F,GAAD,OAAoBC,EAAUD,GAelBG,CAAa9F,EAAMmD,OAAOC,SAC/C,4BAAQA,MAAM,GAAG0B,UAAQ,GAAzB,iBACCrE,OAAOC,KAAKzF,GAAO2G,KAAI,SAAAnD,GAAI,OAC5B,4BAAQyC,IAAKzC,EAAM2E,MAAO3E,GACvBxD,EAAMwD,GAAMrD,WAKnB,kBAACyJ,EAAA,EAAD,CAAQ9E,QAtBA,WACV4F,GACFD,EAAcC,IAoBgBb,UAAWa,GAArC,e,gCC+BKI,G,kNA3Eb1I,MAAQ,CACN2I,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,MAAO,G,kEAIP,IAAMH,EAAQI,SAASC,gBAAgBC,YACjCL,EAAQG,SAASC,gBAAgBE,aACvCC,KAAKC,SAAS,CACZT,QACAC,UAEFG,SAASM,iBAAiB,YAAaF,KAAKG,YAAYC,KAAKJ,S,6CAI7DJ,SAASS,oBAAoB,YAAaL,KAAKG,YAAYC,KAAKJ,S,kCAGtDxG,GAEV,IAAM8G,EAAS9G,EAAMiG,MACfE,GAASK,KAAKnJ,MAAM4I,MAAM,EAAEa,GAAQN,KAAKnJ,MAAM4I,MAAM,IAGrDC,EAAkB,MADTlG,EAAMgG,OAASQ,KAAKnJ,MAAM2I,OACX,IAC9BQ,KAAKC,SAAS,CACZN,QACAD,Y,+BAIM,IAAD,EACkBM,KAAKnJ,MAAtB6I,EADD,EACCA,MAAOC,EADR,EACQA,MACf,OACE,yBAAKxH,UAAU,OACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,WACf,yBAAKA,UAAU,WACf,yBAAKA,UAAU,WACf,yBAAKA,UAAU,WACf,yBAAKA,UAAU,WACf,yBAAKA,UAAU,WAEf,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,kBAAkBoI,MAAO,CAAC,UAAa,aAAcb,EAAO,MAAOC,EAAO,OACvF,yBAAKxH,UAAU,kBACf,yBAAKA,UAAU,oBAEjB,yBAAKA,UAAU,qBACb,8BACA,8BACA,8BACA,8BACA,gCAGJ,yBAAKA,UAAU,uBAGjB,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,0BAAf,WACA,yBAAKA,UAAU,yBAAf,iEAGF,kBAAC,IAAD,CAASmB,GAAG,IAAInB,UAAU,kBAA1B,iB,GArEamE,IAAMkE,YC8DdzI,EAlCGC,mBAZD,SAACnB,GAAD,MAAuB,CACtC4J,YAAkC,OAArB5J,EAAMhB,eAGD,SAACwC,GACnB,MAAO,CACLqI,SAAU,WACRrI,GPpBG,SAACA,GAEN,OADAA,EAASoD,yBACF/F,QAAQiL,IAAI,CbiHd,IAAIjL,SAAQ,SAACC,EAAKC,GACvBY,YAAW,kBAAMb,EAAI,eAAIlB,MAAS,QAK7B,IAAIiB,SAAQ,SAACC,EAAKC,GACvBY,YAAW,kBAAMb,EAAI,eAAIZ,MAAa,UavHnC6G,MAAK,YAAyB,IAAD,mBAAtBnH,EAAsB,KAAfM,EAAe,KAC5BsD,EPkBD,SAAkB5D,GACvB,MAAO,CACLkC,KA5BqB,YA6BrBlC,SOrBamM,CAASnM,IAClB4D,EZkBD,SAAsBtD,GAC3B,MAAO,CACL4B,KA3ByB,gBA4BzB5B,aYrBa8L,CAAa9L,IACtBsD,EAAS0D,mCOqDFhE,EA9BuB,SAAC,GAA+B,IAA7B0I,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAKpD,OAJApE,IAAMwE,WAAU,WACdJ,MACC,CAACA,IAGF,kBAAC,IAAD,CAAQK,SAAUC,6BAChB,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAY7I,UAAU,gBACtB,kBAAC,EAAD,MACA,kBAAC8I,EAAA,EAAD,CAAW9I,UAAU,QACnB,kBAAC,IAAD,KAEIsI,EAAc,kBAAC,IAAD,CAAOpH,OAAK,EAAC6H,KAAK,IAAIC,UAAWC,IAC/C,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAOF,KAAK,IAAI7H,OAAK,EAAC8H,UAAWE,IACjC,kBAAC,IAAD,CAAOH,KAAK,iBAAiBC,UAAWG,IACxC,kBAAC,IAAD,CAAOJ,KAAK,OAAOC,UAAWI,IAC9B,kBAAC,IAAD,CAAOL,KAAK,eAAeC,UAAWK,IACtC,kBAAC,IAAD,CAAON,KAAK,OAAOC,UAAW5B,KAGlC,kBAAC,IAAD,CAAO4B,UAAW5B,WChDxBnI,GAAQqK,sBAAYC,EAASC,GAEnCC,IAASrD,OACP,kBAAC,WAAD,CAAUnH,MAAOA,IACf,kBAAC,EAAD,OAEFwI,SAASiC,eAAe,W","file":"static/js/main.56149716.chunk.js","sourcesContent":["import { UserById } from '../models/user';\nimport {\n  UsersActionTypes,\n  GET_USERS,\n  ADD_USER_ANSWER,\n  ADD_USER_QUESTION\n} from '../actions/users';\n\nconst initialState: UserById = {};\nexport default function users(\n  state = initialState,\n  action: UsersActionTypes\n): UserById {\n  switch (action.type) {\n    case GET_USERS:\n      return {\n        ...state,\n        ...action.users,\n      }\n    case ADD_USER_ANSWER:\n      const { authedUser, questionId, answer } = action;\n      return {\n        ...state,\n        [authedUser]: {\n          ...state[authedUser],\n          answers: {\n            ...state[authedUser].answers,\n            [questionId]: answer,\n          },\n        },\n      }\n    case ADD_USER_QUESTION:\n      return {\n        ...state,\n        [action.authedUser]: {\n          ...state[action.authedUser],\n          questions: state[action.authedUser].questions.concat([action.questionId]),\n        }\n      }\n    default:\n      return state;\n  }\n}\n","let users = {\n  sarahedo: {\n    id: 'sarahedo',\n    name: 'Sarah Edo',\n    avatarURL: 'https://avatars.dicebear.com/api/female/sarahedo.svg?mood[]=happy',\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n    },\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n  },\n  tylermcginnis: {\n    id: 'tylermcginnis',\n    name: 'Tyler McGinnis',\n    avatarURL: 'https://avatars.dicebear.com/api/male/tylermcginnis.svg?mood[]=happy',\n    answers: {\n      \"vthrdm985a262al8qx3do\": 'optionOne',\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n    },\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n  },\n  johndoe: {\n    id: 'johndoe',\n    name: 'John Doe',\n    avatarURL: 'https://avatars.dicebear.com/api/male/johndoe.svg?mood[]=happy',\n    answers: {\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\n    },\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n  }\n}\n\nlet questions = {\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: '8xf0y6ziyjabvozdd253nd',\n    author: 'sarahedo',\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: ['sarahedo'],\n      text: 'have horrible short term memory',\n    },\n    optionTwo: {\n      votes: [],\n      text: 'have horrible long term memory'\n    }\n  },\n  \"6ni6ok3ym7mf1p33lnez\": {\n    id: '6ni6ok3ym7mf1p33lnez',\n    author: 'johndoe',\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: 'become a superhero',\n    },\n    optionTwo: {\n      votes: ['johndoe', 'sarahedo'],\n      text: 'become a supervillain'\n    }\n  },\n  \"am8ehyc8byjqgar0jgpub9\": {\n    id: 'am8ehyc8byjqgar0jgpub9',\n    author: 'sarahedo',\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: 'be telekinetic',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be telepathic'\n    }\n  },\n  \"loxhs1bqm25b708cmbf3g\": {\n    id: 'loxhs1bqm25b708cmbf3g',\n    author: 'tylermcginnis',\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: 'be a front-end developer',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be a back-end developer'\n    }\n  },\n  \"vthrdm985a262al8qx3do\": {\n    id: 'vthrdm985a262al8qx3do',\n    author: 'tylermcginnis',\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: ['tylermcginnis'],\n      text: 'find $50 yourself',\n    },\n    optionTwo: {\n      votes: ['johndoe'],\n      text: 'have your best friend find $500'\n    }\n  },\n  \"xj352vofupe1dqz9emx13r\": {\n    id: 'xj352vofupe1dqz9emx13r',\n    author: 'johndoe',\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: ['johndoe'],\n      text: 'write JavaScript',\n    },\n    optionTwo: {\n      votes: ['tylermcginnis'],\n      text: 'write Swift'\n    }\n  },\n}\n\nfunction generateUID () {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\nexport function _getUsers () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...users}), 1000)\n  })\n}\n\nexport function _getQuestions () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...questions}), 1000)\n  })\n}\n\nfunction formatQuestion ({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    }\n  }\n}\n\nexport function _saveQuestion (question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion\n      }\n\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\n        }\n      }\n\n      res(formattedQuestion)\n    }, 1000)\n  })\n}\n\nexport function _saveQuestionAnswer ({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer\n          }\n        }\n      }\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser])\n          }\n        }\n      }\n\n      res()\n    }, 500)\n  })\n}\n","import { showLoading, hideLoading } from 'react-redux-loading-bar';\n\nimport { _saveQuestion } from '../utils/_DATA';\nimport { Question, QuestionById, AnswerOption } from '../models/question';\n\nexport const GET_QUESTIONS = 'GET_QUESTIONS';\nexport const ADD_QUESTION = 'ADD_QUESTION';\nexport const SAVE_ANSWER = 'SAVE_ANSWER';\n\ninterface GetQuestionsAction {\n  type: typeof GET_QUESTIONS,\n  questions: QuestionById,\n}\n\ninterface AddQuestionAction {\n  type: typeof ADD_QUESTION,\n  question: Question,\n}\n\ninterface SaveAnswerAction {\n  type: typeof SAVE_ANSWER,\n  authedUser: string,\n  questionId: string,\n  answer: AnswerOption,\n}\n\nexport type QuestionsActionTypes = GetQuestionsAction\n | AddQuestionAction\n | SaveAnswerAction;\n\nexport function getQuestions(questions: QuestionById): QuestionsActionTypes {\n  return {\n    type: GET_QUESTIONS,\n    questions,\n  }\n}\n\nexport function addQuestion(question: Question): QuestionsActionTypes {\n  return {\n    type: ADD_QUESTION,\n    question,\n  }\n}\n\nexport function saveAnswer(\n  authedUser: string,\n  questionId: string,\n  answer: AnswerOption\n): QuestionsActionTypes {\n  return {\n    type: SAVE_ANSWER,\n    authedUser,\n    questionId,\n    answer,\n  }\n}\n\nexport function handleAddQuestion (optionOneText: string, optionTwoText: string) {\n  return (dispatch: Function, getState: Function) => {\n    const { authedUser } = getState();\n\n    dispatch(showLoading());\n\n    return _saveQuestion({\n      optionOneText,\n      optionTwoText,\n      author: authedUser,\n    })\n    .then((question: Question) => dispatch(addQuestion(question)))\n    .then(() => dispatch(hideLoading()));\n  }\n}","import {\n  QuestionsActionTypes,\n  GET_QUESTIONS,\n  ADD_QUESTION,\n  SAVE_ANSWER\n} from \"../actions/questions\";\nimport { QuestionById } from \"../models/question\";\n\nconst initialState: QuestionById = {}\n\nexport default function questions(\n  state = initialState,\n  action: QuestionsActionTypes,\n): QuestionById {\n  switch (action.type) {\n    case GET_QUESTIONS:\n      return {\n        ...state,\n        ...action.questions,\n      }\n    case ADD_QUESTION: {\n      const { question } = action;\n      return {\n        ...state,\n        [question.id]: question,\n      }\n    }\n    case SAVE_ANSWER: {\n      const { authedUser, questionId, answer } = action;\n      return {\n        ...state,\n        [questionId]: {\n          ...state[questionId],\n          [answer]: {\n            ...state[questionId][answer],\n            votes: state[questionId][answer].votes.concat([authedUser])\n          }\n        }\n      }\n    }\n    default:\n      return state;\n  }\n}","import { combineReducers, Reducer } from 'redux';\nimport { loadingBarReducer } from 'react-redux-loading-bar';\n\nimport authedUser from './authedUser';\nimport users from './users';\nimport questions from './questions';\nimport { UserById } from '../models/user';\nimport { QuestionById } from '../models/question';\n\nexport interface RootState {\n  authedUser: string | null,\n  users: UserById,\n  questions: QuestionById,\n  loadingBar: Reducer,\n}\n\nexport default combineReducers({\n  authedUser,\n  users,\n  questions,\n  loadingBar: loadingBarReducer,\n})","import {\n  AuthedUserActionTypes,\n  SET_AUTHED_USER,\n  UNSET_AUTHED_USER,\n} from \"../actions/authUser\";\n\nconst initialState: string | null = null;\n\nexport default function authedUser(\n  state = initialState,\n  action: AuthedUserActionTypes,\n): string | null {\n  switch (action.type) {\n    case SET_AUTHED_USER:\n      return action.id;\n    case UNSET_AUTHED_USER:\n      return null;\n    default:\n      return state;\n  }\n}","export const SET_AUTHED_USER = 'SET_AUTHED_USER';\nexport const UNSET_AUTHED_USER = 'UNSET_AUTHED_USER';\n\ninterface SetAuthedUserAction {\n  type: typeof SET_AUTHED_USER,\n  id: string,\n}\n\ninterface UnsetAuthedUserAction {\n  type: typeof UNSET_AUTHED_USER,\n}\n\nexport type AuthedUserActionTypes = SetAuthedUserAction | UnsetAuthedUserAction;\n\nexport function setAuthedUser(id: string): AuthedUserActionTypes {\n  return {\n    type: SET_AUTHED_USER,\n    id,\n  }\n}\n\nexport function unsetAuthedUser(): AuthedUserActionTypes {\n  return {\n    type: UNSET_AUTHED_USER,\n  }\n}","import { AnswerOption } from '../models/question';\nimport { UserById } from '../models/user';\n\nexport const GET_USERS = 'GET_USERS';\nexport const ADD_USER_ANSWER = 'ADD_USER_ANSWER';\nexport const ADD_USER_QUESTION = 'ADD_USER_QUESTION';\n\ninterface GetUsersType {\n  type: typeof GET_USERS,\n  users: UserById,\n}\n\ninterface AddUserAnswerType {\n  type: typeof ADD_USER_ANSWER,\n  authedUser: string,\n  questionId: string,\n  answer: AnswerOption,\n}\n\ninterface AddUserQuestionType {\n  type: typeof ADD_USER_QUESTION,\n  authedUser: string,\n  questionId: string,\n}\n\nexport type UsersActionTypes = GetUsersType\n  | AddUserAnswerType\n  | AddUserQuestionType;\n\nexport function getUsers(users: UserById): UsersActionTypes {\n  return {\n    type: GET_USERS,\n    users,\n  }\n}\n\nexport function addUserAnswer(\n  authedUser: string,\n  questionId: string,\n  answer: AnswerOption\n): UsersActionTypes {\n  return {\n    type: ADD_USER_ANSWER,\n    authedUser,\n    questionId,\n    answer,\n  }\n}\n\nexport function addUserQuestion(\n  authedUser: string,\n  questionId: string\n): UsersActionTypes {\n  return {\n    type: ADD_USER_QUESTION,\n    authedUser,\n    questionId,\n  }\n}","import {\n  Action,\n  Middleware,\n  MiddlewareAPI,\n  AnyAction,\n  Dispatch\n} from \"redux\";\n\nconst logger: Middleware = (store: MiddlewareAPI) => (next: Dispatch<AnyAction>) => (action: Action) => {\n  console.group(action.type);\n    console.log('The action: ', action);\n    const returnValue = next(action);\n    console.log('The new state', store.getState());\n  console.groupEnd()\n  return returnValue;\n}\n\nexport default logger;","import thunk from 'redux-thunk';\nimport { applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from './logger';\n\nexport default composeWithDevTools(applyMiddleware(\n  thunk,\n  logger,\n));\n","import React, { Fragment } from 'react';\nimport { RootState } from '../reducers';\nimport { ConnectedProps, connect } from 'react-redux';\n\ninterface ComponentProps {\n  id: string;\n}\n\nconst mapState = ({ users }: RootState, { id }: ComponentProps) => {\n  return {\n    user: users[id],\n  }\n}\n\nconst connector = connect(mapState);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\ntype Props = PropsFromRedux & ComponentProps;\n\nconst User = ({ user }: Props) => {\n  return (\n    <Fragment>\n      <img src={user.avatarURL}\n        className='avatar' alt={user.name} />\n      <span>{user.name}</span>\n    </Fragment>\n  )\n}\n\nexport default connector(User);","import React, { Fragment } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { RootState } from '../reducers';\nimport { unsetAuthedUser } from '../actions/authUser';\nimport { RouteComponentProps, withRouter, NavLink } from 'react-router-dom';\nimport User from './User';\n\nconst mapState = ({ authedUser }: RootState) => {\n  return { authedUser };\n}\n\nconst mapDispatch = (dispatch: Function) => {\n  return {\n    logout: () => {\n      dispatch(unsetAuthedUser());\n    }\n  }\n}\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype Props = PropsFromRedux & RouteComponentProps;\n\nconst Header = ({ authedUser, logout, history }: Props) => {\n  const onLogout = (event: any) => {\n    event.preventDefault();\n    history.push('/');\n    logout();\n  }\n\n  return (\n    <Navbar bg=\"light\" expand=\"md\">\n      <Navbar.Brand href=\"/\">Would You Rather</Navbar.Brand>\n      { authedUser &&\n      <Fragment>\n        <Navbar.Toggle aria-controls=\"main-nav\" />\n        <Navbar.Collapse id=\"main-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link as={NavLink} exact to=\"/\">Home</Nav.Link>\n            <Nav.Link as={NavLink} to=\"/add\">New Question</Nav.Link>\n            <Nav.Link as={NavLink} to=\"/leaderboard\">Leader Board</Nav.Link>\n            <Nav.Link><User id={authedUser} /></Nav.Link>\n            <Nav.Link onClick={onLogout}>Logout</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Fragment>\n      }\n    </Navbar>\n  )\n}\n\nexport default connector(withRouter(Header));","import React, { SyntheticEvent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { Card } from 'react-bootstrap'\nimport { RootState } from '../reducers';\n\ninterface ComponentProps {\n  id: string;\n}\n\nconst mapState = (\n  { questions }: RootState,\n  { id }: ComponentProps\n) => {\n  return {\n    question: questions[id],\n  }\n}\n\nconst connector = connect(mapState);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\ntype Props = PropsFromRedux & RouteComponentProps & ComponentProps;\n\nconst Question = ({ question, history }: Props) => {\n  const showQuestion = (e: SyntheticEvent, id: string) => {\n    e.preventDefault();\n    history.push(`/questions/${id}`);\n  }\n\n  return (\n    <Card className='mt-3' onClick={(e: SyntheticEvent) => showQuestion(e, question.id)}>\n      <Card.Body>\n        <Card.Title>Would You Rather</Card.Title>\n        { question &&\n          <ul>\n            <li>{question.optionOne.text}</li>\n            <li>{question.optionTwo.text}</li>\n          </ul>\n        }\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default connector(withRouter(Question));","import React, { useState } from 'react';\nimport { Tabs, Tab, Row, Col } from 'react-bootstrap';\nimport { RootState } from '../reducers';\nimport { connect, ConnectedProps } from 'react-redux';\nimport Question from './Question';\n\nconst mapState = ({ questions, users, authedUser}: RootState) => {\n  if (!authedUser) return;\n  const user = users[authedUser];\n  const answeredQuestions = Object.keys(user.answers)\n    .sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n  const unansweredQuestions = Object.keys(questions)\n      .filter((questionId) => !answeredQuestions.includes(questionId))\n      .sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n\n  return {\n    answeredQuestions,\n    unansweredQuestions,\n  }\n}\n\nconst connector = connect(mapState);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\nconst Dashboard: React.FC<PropsFromRedux> = ({\n  answeredQuestions,\n  unansweredQuestions\n}) => {\n  const [key, setKey] = useState('unanswered');\n\n  return (\n    <Tabs\n      id='dashboard'\n      activeKey={key}\n      onSelect={(k: string) => setKey(k)}\n      className='justify-content-center'\n    >\n      <Tab eventKey=\"unanswered\" title=\"Unanswered\">\n        <Row>\n          {unansweredQuestions.map( questionId =>\n          <Col key={questionId} sm='6' md='4'>\n            <Question id={questionId} />\n          </Col>\n          )}\n        </Row>\n      </Tab>\n      <Tab eventKey=\"answered\" title=\"Answered\">\n        <Row>\n          {answeredQuestions.map( questionId =>\n          <Col key={questionId} sm='6' md='4'>\n            <Question id={questionId} />\n          </Col>\n          )}\n        </Row>\n      </Tab>\n    </Tabs>\n  )\n}\n\nexport default connector(Dashboard);","import { showLoading, hideLoading } from 'react-redux-loading-bar'\nimport { _getUsers, _getQuestions, _saveQuestionAnswer, _saveQuestion } from '../utils/_DATA'\nimport { getUsers, addUserAnswer, addUserQuestion } from './users';\nimport { getQuestions, saveAnswer, addQuestion } from './questions';\nimport { AnswerOption, Question } from '../models/question';\n\nexport function handleInitialData() {\n  return (dispatch: Function) => {\n    dispatch(showLoading());\n    return Promise.all([_getUsers(), _getQuestions()])\n      .then(([users, questions]) => {\n        dispatch(getUsers(users));\n        dispatch(getQuestions(questions));\n        dispatch(hideLoading());\n      })\n  }\n}\n\nexport function handleSaveAnswer(questionId: string, answer: AnswerOption) {\n  return (dispatch: Function, getState: Function) => {\n    const { authedUser } = getState();\n    dispatch(showLoading());\n\n    return _saveQuestionAnswer({\n      authedUser,\n      qid: questionId,\n      answer,\n    })\n    .then(() => {\n      dispatch(saveAnswer(authedUser, questionId, answer));\n      dispatch(addUserAnswer(authedUser, questionId, answer))\n    })\n    .then(() => dispatch(hideLoading()));\n  }\n}\n\nexport function handleAddQuestion(optionOneText: string, optionTwoText: string) {\n  return (dispatch: Function, getState: Function) => {\n    const { authedUser: author } = getState();\n\n    dispatch(showLoading())\n\n    return _saveQuestion({\n      optionOneText,\n      optionTwoText,\n      author,\n    })\n    .then((question: Question) => {\n      dispatch(addQuestion(question));\n      dispatch(addUserQuestion(author, question.id));\n    })\n    .then(() => dispatch(hideLoading()));\n  }\n}","import React from 'react';\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { RouteComponentProps, Redirect, NavLink } from 'react-router-dom';\nimport { FaCheck } from 'react-icons/fa'\nimport { RootState } from '../reducers';\nimport User from './User';\nimport { handleSaveAnswer } from '../actions/shared';\nimport { AnswerOption } from '../models/question';\nimport { formatDate } from '../utils/helper';\n\ninterface RouteParams {\n  id: string;\n}\n\nconst mapState = (\n  { questions, users, authedUser }: RootState,\n  props: RouteComponentProps<RouteParams>\n) => {\n  if (!authedUser) return;\n  const { id } = props.match.params;\n  const question = questions[id];\n  const author = users[question.author];\n  const isOption1Answered = question.optionOne.votes.includes(authedUser);\n  const isOption2Answered = question.optionTwo.votes.includes(authedUser);\n  const isAnswered = isOption1Answered || isOption2Answered;\n  return {\n    question,\n    author,\n    isAnswered,\n    isOption1Answered,\n  }\n}\n\nconst mapDispatch = (dispatch: Function, props: RouteComponentProps<RouteParams>) => {\n  const { id } = props.match.params;\n  return {\n    saveAnswer: (answer: AnswerOption) => {\n      dispatch(handleSaveAnswer(id, answer));\n    }\n  }\n}\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype Props = PropsFromRedux & RouteComponentProps<RouteParams>;\n\nconst QuestionDetails = ({\n  question,\n  author,\n  isAnswered,\n  isOption1Answered,\n  saveAnswer,\n}: Props) => {\n  const [selectedOption, setSelectedOption] = React.useState<AnswerOption>();\n\n  const onSubmit = (e: React.FormEvent) => {\n    console.log('submit click', e);\n    e.preventDefault()\n    if (selectedOption) {\n      saveAnswer(selectedOption)\n    }\n  }\n\n  const onClickRadio = (e: any) => {\n    setSelectedOption(e.target.value)\n  }\n\n  const check = <FaCheck size=\"40\" color='green'/>\n\n  const render = () => {\n    if (!question) {\n      return <Redirect to='/404' />\n    }\n\n    const optionOneVotes = question.optionOne.votes.length;\n    const optionTwoVotes = question.optionTwo.votes.length;\n    const percentageOption1 = (optionOneVotes / (optionOneVotes + optionTwoVotes) * 100).toFixed(2)\n    const percentageOptionTwo = (optionTwoVotes / (optionOneVotes + optionTwoVotes) * 100).toFixed(2)\n\n    return (\n      <Row>\n        <Col md={{span: 6, offset: 3}}>\n          <Card>\n            <Card.Header>\n              <User id={author.id} />\n              <NavLink to='/' className='float-right btn btn-secondary'>Back</NavLink>\n              <div className='mt-2 ml-2'>{formatDate(question.timestamp)}</div>\n            </Card.Header>\n            <Card.Body>\n              <Card.Title>Would You Rather</Card.Title>\n              {isAnswered ?\n                <ul>\n                  <li>\n                    {question.optionOne.text} ({optionOneVotes} vote(s) | {percentageOption1}%){isOption1Answered ? check : null}\n                  </li>\n                  <li>\n                    {question.optionTwo.text} ({optionTwoVotes} vote(s) | {percentageOptionTwo}%){!isOption1Answered ? check : null}\n                  </li>\n                </ul>:\n                <Form>\n                  <Form.Group>\n                    <Form.Check\n                      type='radio'\n                      id='radio-1'\n                      name='option'\n                      value='optionOne'\n                      label={question.optionOne.text}\n                      onChange={onClickRadio}\n                    />\n                    <Form.Check\n                      type='radio'\n                      id='radio-2'\n                      name='option'\n                      value='optionTwo'\n                      label={question.optionTwo.text}\n                      onChange={onClickRadio}\n                    />\n                  </Form.Group>\n                  <Button disabled={!selectedOption} onClick={onSubmit}>Submit</Button>\n                </Form>\n              }\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    )\n  }\n\n  return render();\n}\n\nexport default connector(QuestionDetails);","export function formatDate (timestamp: number) {\n  const d = new Date(timestamp)\n  const time = d.toLocaleTimeString('en-US')\n  return time.substr(0, 5) + time.slice(-2) + ' | ' + d.toLocaleDateString()\n}\n","import React from 'react';\nimport { handleAddQuestion } from '../actions/shared';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { Col, Row, Card, Form, Button } from 'react-bootstrap';\n\nconst mapDispatch = (dispatch: Function) => {\n  return {\n    addQuestion: (optionOne: string, optionTwo: string) => {\n      dispatch(handleAddQuestion(optionOne, optionTwo));\n    }\n  }\n}\n\nconst connector = connect(null, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype Props = PropsFromRedux & RouteComponentProps;\n\nconst NewQuestion = ({ addQuestion, history}: Props) => {\n  const [optionOne, setOptionOne] = React.useState('');\n  const [optionTwo, setOptionTwo] = React.useState('');\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    addQuestion(optionOne, optionTwo);\n    history.push('/');\n  }\n\n  return (\n    <Row>\n      <Col md={{ span: 6, offset: 3 }}>\n        <Card>\n          <Card.Body>\n            <Card.Title>Would You Rather</Card.Title>\n            <Form onSubmit={handleSubmit}>\n              <Form.Group>\n                <Form.Label>Option One</Form.Label>\n                <Form.Control\n                  type='text'\n                  value={optionOne}\n                  onChange={(e) => setOptionOne(e.target.value) }\n                  placeholder='Option One'\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Option Two</Form.Label>\n                <Form.Control\n                  type='text'\n                  value={optionTwo}\n                  onChange={(e) => setOptionTwo(e.target.value)}\n                  placeholder='Option Two'\n                />\n              </Form.Group>\n              <Button type='submit' disabled={!optionOne && !optionTwo}>Submit</Button>\n            </Form>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default connector(withRouter(NewQuestion));","import React from 'react';\nimport { RootState } from '../reducers';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { Table } from 'react-bootstrap';\nimport User from './User';\n\nconst mapState = ({ users }: RootState) => {\n  const list = Object.keys(users).map(id => ({\n    id,\n    created: users[id].questions.length,\n    answered: Object.keys(users[id].answers).length,\n  }))\n  .sort((a, b) => b.created + b.answered - (a.created + a.answered));\n  return {\n    list,\n  }\n}\n\nconst connector = connect(mapState);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\nconst LeaderBoard = ({ list }: PropsFromRedux) => (\n  <Table className='leader-board'>\n    <thead>\n      <tr>\n        <th>Rank</th>\n        <th>User</th>\n        <th>Questions Created</th>\n        <th>Questions Answered</th>\n      </tr>\n    </thead>\n    <tbody>\n      {list.map((user, index) =>\n        <tr key={user.id}>\n          <td>{index + 1}</td>\n          <td><User id={user.id} /></td>\n          <td>{user.created}</td>\n          <td>{user.answered}</td>\n        </tr>\n      )}\n    </tbody>\n  </Table>\n)\n\nexport default connector(LeaderBoard);","import React from 'react';\nimport { RootState } from '../reducers';\nimport { setAuthedUser } from '../actions/authUser';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\n\nconst mapState = ({ users }: RootState) => {\n  return { users };\n};\n\nconst mapDispatch = (dispatch: Function) => {\n  return {\n    setAuthedUser: (id: string) => {\n      dispatch(setAuthedUser(id));\n    }\n  }\n}\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\nconst Login = ({ users, setAuthedUser }: PropsFromRedux) => {\n  const [userId, setUserId] = React.useState('');\n\n  const onUserChange = (userId: string) => setUserId(userId);\n\n  const onLogin = () => {\n    if (userId) {\n      setAuthedUser(userId);\n    }\n  }\n\n  return (\n    <Row>\n      <Col md={{span: 6, offset: 3}}>\n        <Form>\n          <Form.Group controlId='selectUser'>\n            <Form.Label>Select User</Form.Label>\n            <Form.Control as='select' value={userId}\n              onChange={(event) => onUserChange(event.target.value)}>\n              <option value='' disabled>Please select</option>\n              {Object.keys(users).map(user =>\n              <option key={user} value={user}>\n                {users[user].name}\n              </option>\n              )}\n            </Form.Control>\n          </Form.Group>\n          <Button onClick={onLogin} disabled={!userId}>Login</Button>\n        </Form>\n      </Col>\n    </Row>\n  )\n}\n\nexport default connector(Login);","import React from 'react';\nimport './NotFound.css';\nimport { NavLink } from 'react-router-dom';\n\nclass NotFound extends React.Component {\n  state = {\n    pageX: 0,\n    pageY: 0,\n    xAxis: 0,\n    yAxis: 0,\n  }\n\n  componentDidMount() {\n    const pageX = document.documentElement.clientWidth;\n    const pageY = document.documentElement.clientHeight;\n    this.setState({\n      pageX,\n      pageY,\n    })\n    document.addEventListener('mousemove', this.onMouseMove.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousemove', this.onMouseMove.bind(this));\n  }\n\n  onMouseMove(event: MouseEvent) {\n    // verticalAxis\n    const mouseY = event.pageY;\n    const yAxis = (this.state.pageY/2-mouseY)/this.state.pageY*300;\n    //horizontalAxis\n    const mouseX = event.pageX / -this.state.pageX;\n    const xAxis = -mouseX * 100 - 100;\n    this.setState({\n      yAxis,\n      xAxis,\n    })\n  }\n\n  render() {\n    const { xAxis, yAxis } = this.state;\n    return (\n      <div className='box'>\n        <div className='box__ghost'>\n          <div className='symbol'></div>\n          <div className='symbol'></div>\n          <div className='symbol'></div>\n          <div className='symbol'></div>\n          <div className='symbol'></div>\n          <div className='symbol'></div>\n\n          <div className='box__ghost-container'>\n            <div className='box__ghost-eyes' style={{'transform': 'translate('+ xAxis +'%,-'+ yAxis +'%)'}}>\n              <div className='box__eye-left'></div>\n              <div className='box__eye-right'></div>\n            </div>\n            <div className='box__ghost-bottom'>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n            </div>\n          </div>\n          <div className='box__ghost-shadow'></div>\n        </div>\n\n        <div className='box__description text-center'>\n          <div className='box__description-container mb-3'>\n            <div className='box__description-title'>Whoops!</div>\n            <div className='box__description-text'>It seems like we couldn't find the page you were looking for</div>\n          </div>\n\n          <NavLink to='/' className='btn btn-danger'>Go back</NavLink>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default NotFound;\n","import React, { Fragment } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\nimport LoadingBar from 'react-redux-loading-bar';\nimport { Container } from 'react-bootstrap';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { RootState } from '../reducers'\nimport Header from './Header';\nimport Dashboard from './Dashboard';\nimport QuestionDetails from './QuestionDetails';\nimport NewQuestion from './NewQuestion';\nimport LeaderBoard from './LeaderBoard';\nimport Login from './Login';\nimport NotFound from './NotFound';\nimport { handleInitialData } from '../actions/shared';\n\nconst mapState = (state: RootState) => ({\n  notLoggedIn: state.authedUser === null,\n})\n\nconst mapDispatch = (dispatch: Function) => {\n  return {\n    loadData: () => {\n      dispatch(handleInitialData());\n    }\n  }\n}\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\nconst App: React.FC<PropsFromRedux> = ({ notLoggedIn, loadData }) => {\n  React.useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Fragment>\n        <LoadingBar className='loading-bar' />\n        <Header />\n        <Container className='main'>\n          <Switch>\n            {\n              notLoggedIn ? <Route exact path='/' component={Login} /> :\n              <Fragment>\n                <Route path='/' exact component={Dashboard} />\n                <Route path='/questions/:id' component={QuestionDetails} />\n                <Route path='/add' component={NewQuestion} />\n                <Route path='/leaderboard' component={LeaderBoard} />\n                <Route path='/404' component={NotFound} />\n              </Fragment>\n            }\n            <Route component={NotFound} />\n          </Switch>\n        </Container>\n      </Fragment>\n    </Router>\n  )\n}\n\nexport default connector(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './reducers';\nimport middleware from './middleware';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\n\nconst store = createStore(reducer, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}